import json
from src.prompts import PENTEST_FIRST_STEP_THOUGHT_PROMPT, THOUGHT_TO_COMMAND_PROMPT

class PentestAgent:
    def __init__(self, client, data_dir='./logs', task_id=None):
        self.client = client
        self.data_dir = data_dir
        self.task_id = task_id
        self.task = None

    def set_task(self, task_text: str):
        self.task = task_text

    def generate_thought(self):
        prompt = PENTEST_FIRST_STEP_THOUGHT_PROMPT + "\nTask:\n" + (self.task or '')
        messages = [{'role': 'system', 'content': 'You are Pentest Pilot.'}, {'role': 'user', 'content': prompt}]
        thought = self.client.chat(messages)
        return thought

    def determine_next_action(self, thought_text: str):
        # Convert the thought to a single command using THOUGHT_TO_COMMAND_PROMPT
        messages = [{'role': 'system', 'content': 'You are a command extractor.'}, {'role': 'user', 'content': THOUGHT_TO_COMMAND_PROMPT + '\n' + thought_text}]
        try:
            cmd = self.client.chat(messages, max_tokens=200)
        except Exception:
            cmd = ''
        if not cmd or 'done' in thought_text.lower():
            return '', 'success'
        return cmd.strip(), 'action'

    def generate_summary(self, success: bool = False):
        # Placeholder: implement report generation later
        if success:
            print('Task succeeded — summary to be generated')
        else:
            print('Task failed — summary to be generated')
